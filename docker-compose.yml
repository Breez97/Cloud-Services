# version: '3.8'

# services:
#   web:
#     build:
#       context: .
#       dockerfile: Dockerfile.web
#     container_name: cloud-services-web
#     expose:
#       - "5000"
#     depends_on:
#       - db
#       - redis
#       - prometheus 
#     environment:
#       - POSTGRES_HOST=db
#       - REDIS_HOST=redis
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
#     networks:
#       - default
  
#   db:
#     image: postgres:latest
#     environment:
#       - POSTGRES_USER=user
#       - POSTGRES_PASSWORD=password
#       - POSTGRES_DB=flask_db
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - default
  
#   redis:
#     image: redis:alpine
#     ports:
#       - "6379:6379"
#     networks:
#       - default
  
#   nginx:
#     image: nginx:latest
#     ports:
#       - "8080:80"
#       - "443:443"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#       - /etc/letsencrypt:/etc/letsencrypt
#       - /var/www/certbot:/var/www/certbot
#     restart: always
#     depends_on:
#       - web
#       - prometheus
#       - grafana
#     networks:
#       - default
  
#   certbot:
#     image: certbot/certbot
#     volumes:
#       - /etc/letsencrypt:/etc/letsencrypt
#       - /var/www/certbot:/var/www/certbot
#     networks:
#       - default

#   prometheus:
#     image: prom/prometheus:latest
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#     ports:
#       - "9089:9090"
#     networks:
#       - default

#   node-exporter:
#     image: prom/node-exporter:latest
#     ports:
#       - "9100:9100"
#     networks:
#       - default
  
#   grafana:
#     image: grafana/grafana:latest
#     ports:
#       - "3000:3000"
#     environment:
#       - GF_SECURITY_ADMIN_USER=admin
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#     depends_on:
#       - prometheus
#     networks:
#       - default
  
#   elasticsearch:
#     image: elasticsearch:8.16.0
#     environment:
#       - discovery.type=single-node
#       - xpack.security.enabled=false
#     ports:
#       - "9200:9200"
#     volumes:
#       - esdata:/usr/share/elasticsearch/data
#     networks:
#       - default
  
#   logstash:
#     image: logstash:8.16.0
#     volumes:
#       - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#     ports:
#       - "5000:5000"
#     depends_on:
#       - elasticsearch
#     networks:
#       - default
  
#   kibana:
#     image: kibana:8.16.0
#     ports: 
#       - "5601:5601"
#     depends_on:
#       - elasticsearch
#     networks:
#       - default

# volumes:
#   postgres_data:
#   esdata:

# networks:
#   default:
#     driver: bridge

version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: cloud-services-web
    expose:
      - "5000"
    environment:
      - POSTGRES_HOST=db
    depends_on:
      - db
      - elasticsearch
    networks:
      - default

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=flask_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default

  elasticsearch:
    image: elasticsearch:8.16.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - default

  logstash:
    image: logstash:8.16.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - default

  kibana:
    image: kibana:8.16.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports: 
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - default

volumes:
  postgres_data:
  esdata:

networks:
  default:
    driver: bridge
